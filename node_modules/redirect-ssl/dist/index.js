'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var tslib = require('tslib');
var isHTTPS = _interopDefault(require('is-https'));

var defaults = {
  trustProxy: true,
  redirectPort: 443,
  redirectHost: '',
  redirectUnknown: true,
  enabled: true,
  statusCode: 307,
  exclude: []
};

var isExcluded = function (url, patterns) {
  if (patterns === void 0) {
    patterns = [];
  }

  return patterns.some(function (pattern) {
    return url.match(pattern);
  });
}; // Creates new middleware using provided options


function create(_options) {
  var options = tslib.__assign(tslib.__assign({}, defaults), _options);

  var _port = options.redirectPort === 443 ? '' : ':' + options.redirectPort;

  function redirectSSL(req, res, next) {
    var url = req.url || '';

    if (!options.enabled || isExcluded(url, options.exclude)) {
      return next && next();
    }

    var _isHttps = isHTTPS(req, options.trustProxy);

    var shouldRedirect = options.redirectUnknown ? !_isHttps : _isHttps === false;

    if (shouldRedirect) {
      var _redirectHost = (options.redirectHost || req.headers.host || '').split(':')[0];
      var ـredirectURL = 'https://' + _redirectHost + _port + url;
      res.writeHead(options.statusCode, {
        Location: ـredirectURL
      });
      return res.end(ـredirectURL);
    }

    return next && next();
  }

  redirectSSL.create = create;
  return redirectSSL;
} // Export a new instance using defaults


var index = create({});

module.exports = index;
